node('fdo-ccode'){
    withEnv([
        'REPO_Safestring=https://github.com/intel/safestringlib.git',
        'REPO_TinyCBOR=https://github.com/intel/tinycbor.git',
        'REPO_METEE=https://github.com/intel/metee.git'
      ])
  {
    stage('Clone Client-SDK'){
      deleteDir()
      dir('client-sdk'){
        checkout scm
      }
      sh 'git clone "${REPO_Safestring}"'
      sh 'git clone "${REPO_TinyCBOR}"'
      sh 'git clone "${REPO_METEE}"'
      }

    stage('Build safestring'){
      sh '''
        cd $WORKSPACE/safestringlib
        echo 'Building safestring'
        mkdir obj
        make
      '''
    }

    stage('Build TinyCBOR'){
      sh '''
        cd $WORKSPACE/tinycbor
        echo 'Building TinyCBOR'
        git checkout v0.5.3
        make
      '''
    }

    stage('Build METEE'){
      sh '''
        cd $WORKSPACE/metee
        echo 'Building METEE'
        cmake .
        make -j$(nproc)
        sudo make install
      '''
    }

    stage('Build CSE'){
      sh '''
        export SAFESTRING_ROOT=$WORKSPACE/safestringlib
        echo $SAFESTRING_ROOT
        export TINYCBOR_ROOT=$WORKSPACE/tinycbor
        echo $TINYCBOR_ROOT
        export METEE_ROOT=$WORKSPACE/metee
        echo $METEE_ROOT
        cd $WORKSPACE/client-sdk
        $WORKSPACE/client-sdk/build.sh -s
        mkdir client-sdk-cse-binaries
        cd client-sdk-cse-binaries
        cp -r ../cse_ecdsa384_gcm_bin .
        cp -r ../cse_ecdsa384_ccm_bin .
        cp -r ../cse-util .
        cd ..
        tar -cvzf client-sdk-cse-binaries.tar.gz client-sdk-cse-binaries
      '''
      print "Archive the artifacts"
      archiveArtifacts artifacts: 'client-sdk/client-sdk-cse-binaries.tar.gz', fingerprint: true, allowEmptyArchive: false
    }

    deleteDir()  
  }
}
